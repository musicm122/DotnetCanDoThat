@using BlazorComponents.ViewModel
@inherits MvvmComponentBase<CookieCounterViewModel>
@inject CookieCounterViewModel CookieCounterViewModel
<div>
    <h1>
        @BindingContext.UnitLabel
    </h1>
    <ul>
        <li>
            @Bind(vm => vm.UnitLabel) : 
            @Bind(vm => vm.CookieCount)
        </li>
        <li>
            Cooldown :
            @Bind(vm => vm.CurrentCookieCooldown)
            /
            @Bind(vm => vm.MaxCookieCooldown)
        </li>
    </ul>

    <button disabled="@Bind(vm => vm.DisableClick)" @onclick="@BindingContext.Increment">
        Get @Bind(vm => vm.UnitLabel)
    </button>

    
    <div> Binding Context :</div>
    <ul>
        <li>
            UnitLabel : @Bind(vm => vm.UnitLabel)
        </li>
        <li>
            CookieCount : @Bind(vm => vm.CookieCount)
        </li>
        <li>
            DisableClick : @Bind(vm => vm.DisableClick)
        </li>
        <li>
            MaxCookieCooldown : @Bind(vm => vm.MaxCookieCooldown)
        </li>
        <li>
            CurrentCookieCooldown : @Bind(vm => vm.CurrentCookieCooldown)
        </li>
    </ul>
    <hr>
    <div> Binding Context2 :</div>
    <div>
        <ul>
            <li>
                ID:@CookieCounterViewModel.Id
            </li>
            <li>
                UnitLabel : @CookieCounterViewModel.UnitLabel
            </li>
            <li>
                CookieCount : @CookieCounterViewModel.CookieCount
            </li>
            <li>
                DisableClick : @CookieCounterViewModel.DisableClick
            </li>
            <li>
                MaxCookieCooldown : @CookieCounterViewModel.MaxCookieCooldown
            </li>
            <li>
                CurrentCookieCooldown : @CookieCounterViewModel.CurrentCookieCooldown
            </li>
        </ul>
    </div>
</div>
@code
{
    protected override void OnInitialized()
    {
        BindingContext = CookieCounterViewModel;
        base.OnInitialized();
    }
}
